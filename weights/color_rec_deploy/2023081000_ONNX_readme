
# 模型 输入与输出
input:  (batch_size, 3, 48, 168), 颜色通道顺序为：BGR
output: 使用模型output_2头输出的结果， (batch_size, 5), 5表示车牌的颜色类别，索引对应的车牌颜色顺序：['黑色', '蓝色', '绿色', '白色', '黄色']


# 归一化计算
# 车牌图片输入模型前进行了归一化计算：
	mean_value = (0.588, 0.588, 0.588)
	std_value = (0.193, 0.193, 0.193)
计算方式如下

def image_processing(img, device, img_size):
    img_h, img_w = img_size
    img = cv2.resize(img, (img_w, img_h))
    # img = np.reshape(img, (48, 168, 3))

    # normalize
    img = img.astype(np.float32)
    img = (img / 255. - mean_value) / std_value
    img = img.transpose([2, 0, 1])
    img = torch.from_numpy(img)

    img = img.to(device)
    img = img.view(1, *img.size())
    return img

